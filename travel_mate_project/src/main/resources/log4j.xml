<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<!-- Application Loggers -->
	<!-- logger : 특정 패키지의 클래스에서 발생되는 로그 이벤트를 기록하기 위한 엘리먼트 -->
	<!-- => logger 엘리먼트는 root 엘리먼트에 설정된 로그 구현체(Appender)를 제공받아 사용 -->
	<!-- name 속성 : 로그 이벤트가 발생될 클래스의 패키지를 속성값으로 설정 -->
	<logger name="xyz.itwill.controller">
		<!-- level : 클래스에 적용될 로그 이벤트를 설정하기 위한 엘리먼트 -->
		<!-- => root 엘리먼트의 priority 엘리먼트로 제공되는 로그 이벤트보다 우선 처리 -->
		<!-- value 속성 : 로그 이벤트를 속성값으로 설정 -->
		<!-- => 속성값으로 설정된 로그 이벤트보다 상위 로그 이벤트가 발생된 경우에도 로깅정보 기록 -->
		<level value="info" />
	</logger>
	
	
	<!-- logger 엘리먼트는 root 엘리먼트에서 사용하는 로그 구현체로 로깅정보 기록 -->
	<!-- => logger 엘리먼트에 appender-ref 엘리먼트를 작성해 원하는 로그 구현체로 기록되도록 설정 가능 -->
	<!-- => logger 엘리먼트의 로그 구현체와 root 엘리먼트에서 제공되는 로그 구현체로 기록 -->
	<!-- additivity 속성 : false 또는 true(기본값) 중 하나를 속성값으로 설정 -->
	<!-- => additivity 속성값을 [false]로 설정하면 root 엘리먼트로 제공되는 로그 구현체를 사용하지  
	않고 logger 엘리먼트의 appender-ref 엘리먼트로 제공된 로그 구현체만 사용해 기록되도록 설정 -->
		
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>
	
	<!-- SpyLogDelegator 객체에 의해 발생된 로그 이벤트를 기록하기 위한 logger 엘리먼트 -->
	<!-- jdbc.sqlonly : 완성된 SQL 명령 기록 -->
	<logger name="jdbc.sqlonly">
		<level value="info"/>
	</logger>
	
	<!-- jdbc.sqltiming : SQL 명령의 실행시간(ms) 기록 -->
	<logger name="jdbc.sqltiming">
		<level value="info"/>
	</logger>
	
	<!-- jdbc.audit : ResultSet 객체 관련 정보를 제외한 모든 JDBC 관련 정보 기록 -->
	<logger name="jdbc.audit">
		<level value="info"/>
	</logger>
	
	<!-- jdbc.resultset : ResultSet 객체 관련 정보를 기록 -->
	<!-- 너무 많은 정보가 기록되서 주석처리로 미사용
	<logger name="jdbc.resultset">
		<level value="info"/>
	</logger>
	 -->
	 
	<!-- jdbc.resultset : ResultSet 객체 관련 정보를 표 형식으로 기록 -->
	<logger name="jdbc.resultsettable">
		<level value="info"/>
	</logger>
	 
	<!-- jdbc.connection : Connection 객체 관련 정보를 기록 -->
	<logger name="jdbc.connection">
		<level value="info"/>
	</logger> 

	<!-- Root Logger -->
	<root>
		<priority value="warn" />
		<appender-ref ref="console" />
	</root>
	
</log4j:configuration>
